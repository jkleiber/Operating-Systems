==>ditto      "This      is     a     test"
This      is     a     test
==>environ
CLUTTER_IM_MODULE=xim
LD_LIBRARY_PATH=/opt/ros/melodic/lib
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
LESSCLOSE=/usr/bin/lesspipe %s %s
XDG_MENU_PREFIX=gnome-
LANG=C.UTF-8
DISPLAY=:0
GNOME_SHELL_SESSION_MODE=ubuntu
ROS_ETC_DIR=/opt/ros/melodic/etc/ros
COLORTERM=truecolor
USERNAME=justin
XDG_VTNR=2
SSH_AUTH_SOCK=/run/user/1000/keyring/ssh
MANDATORY_PATH=/usr/share/gconf/ubuntu.mandatory.path
XDG_SESSION_ID=2
USER=justin
DESKTOP_SESSION=ubuntu
QT4_IM_MODULE=xim
TEXTDOMAINDIR=/usr/share/locale/
GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/911be3be_3a51_4e51_9b92_d725a6caa6a7
DEFAULTS_PATH=/usr/share/gconf/ubuntu.default.path
PWD=/home/justin/projects/Operating-Systems/project1
HOME=/home/justin
TEXTDOMAIN=im-config
CMAKE_PREFIX_PATH=/opt/ros/melodic
SSH_AGENT_PID=1484
QT_ACCESSIBILITY=1
XDG_SESSION_TYPE=x11
XDG_DATA_DIRS=/usr/share/ubuntu:/usr/local/share:/usr/share:/var/lib/snapd/desktop
XDG_SESSION_DESKTOP=ubuntu
ROS_ROOT=/opt/ros/melodic/share/ros
ROS_MASTER_URI=http://localhost:11311
GJS_DEBUG_OUTPUT=stderr
ROS_VERSION=1
GTK_MODULES=gail:atk-bridge
WINDOWPATH=2
TERM=xterm-256color
SHELL=/bin/bash
VTE_VERSION=5202
ROS_PYTHON_VERSION=2
QT_IM_MODULE=ibus
XMODIFIERS=@im=ibus
IM_CONFIG_PHASE=2
XDG_CURRENT_DESKTOP=ubuntu:GNOME
GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1
GNOME_TERMINAL_SERVICE=:1.71
XDG_SEAT=seat0
SHLVL=1
PYTHONPATH=/opt/ros/melodic/lib/python2.7/dist-packages
ROS_PACKAGE_PATH=/opt/ros/melodic/share
ROSLISP_PACKAGE_DIRECTORIES=
GDMSESSION=ubuntu
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
LOGNAME=justin
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
XDG_RUNTIME_DIR=/run/user/1000
XAUTHORITY=/run/user/1000/gdm/Xauthority
XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
PATH=/opt/ros/melodic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
PKG_CONFIG_PATH=/opt/ros/melodic/lib/pkgconfig
GJS_DEBUG_TOPICS=JS ERROR;JS LOG
SESSION_MANAGER=local/justin-Q534UX:@/tmp/.ICE-unix/1388,unix/justin-Q534UX:/tmp/.ICE-unix/1388
ROS_DISTRO=melodic
LESSOPEN=| /usr/bin/lesspipe %s
GTK_IM_MODULE=ibus
OLDPWD=/home/justin/projects/Operating-Systems/project1/tests
_=./project1
==>help
Project 1

Name: Justin Kleiber

Email address: jkleiber@ou.edu | jkleiber8@gmail.com

Date: 09/27/2018

Description
My approach to this problem was to create a sequence of if statements that
determine the command the user wants to run. Before this though, I check to 
see if a batch file was input to the program. Either way it accepts user 
commands and executes them accordingly. When possible, I used system() but when
this was not possible I leaned on libc functions like rename() and on FILE 
pointers.
I used dynamic memory allocation to reduce memory requirements and based my
code off of the code posted on the course website as a starting point. I tried
to encapsulate code into functions when possible, and I found a way to 
generalize the code for help and mimic.

Instructions
Run my code from your parent shell with "./project1" (no quotes). Batch files
can be read in from redirected standard input, or as a program argument.

Here's a list of commands:
esc - ends the shell
wipe - clears the view on the shell
filez (target) - shows files in the current working directory (or optionally 
                 target)
chdir (dir) - changes the current directory (if dir is not passed this prints 
              working directory)
environ - see environment variables
ditto (message) - prints back message to the shell
help - pull up this helpful menu
mimic [src] [dst] - copies a src file to a dst file. Both arguments are 
                    required.
morph [src] [dst] - Move a source file to a destination file. If dst is a 
                    directory, the filename is kept but the path changes.
                    Both arguments are required.
erase [target] - deletes a file from the filesystem. The target is required

You can also run any normal linux command through this shell.

Known Bugs/Assumptions
My code assumes that all directory paths end with a forward slash.
I also made the assumption that only files will be copied with mimic.
When the linux command 'cd' is executed, its effect does not stick after the 
command is run because its child process ends.

References
In general, I leaned on the man pages, lecture notes, and given code for help 
on this assignment. When I didn't know how to do something, I searched online,
and those links are below.

I talked to Alex Miller about possible ways to implement the morph feature 
after the new requirements were released. I also talked to Shelby Conklin and 
Trey Sullivent about high level requirements. 

In the past when I wanted to copy strings, I've used strcpy. I referenced man
pages for this, but it was interesting to learn the differences between strcpy
and strdup here:
https://stackoverflow.com/questions/14020380/strcpy-vs-strdup

I used the Open Group's website to learn how to implement putenv()
http://pubs.opengroup.org/onlinepubs/009604599/functions/putenv.html

Learning how to add errno to the code:
http://man7.org/linux/man-pages/man3/errno.3.html

Printing errno in human readable form:
https://stackoverflow.com/questions/503878/how-to-know-what-the-errno-means

I used this as a reference when using fopen to read and write:
https://www.tutorialspoint.com/c_standard_library/c_function_fopen.htm

Found this after searching how to remove files in C:
https://linux.die.net/man/3/remove

I wanted to know how to take a substring of a character sequence in C, and this 
helped me:
https://www.linuxquestions.org/questions/programming-9/extract-substring-from-string-in-c-432620/

For detecting if stdin was from a terminal or a redirection, I found this link: 
https://stackoverflow.com/questions/26747597/perform-action-if-input-is-redirected

For finding the filename in a path, I found out about basename through google
leading me to the man page for it:
http://man7.org/linux/man-pages/man3/basename.3.html
==>touch file1 file2
==>filez
Makefile
README.txt
batchfile
dir2
file1
file2
file3
output
project1
project1.c
project1.o
tests
==>mimic file2 file3
==>erase file1
==>mimic file1 file2
==>filez
Makefile
README.txt
batchfile
dir2
file2
file3
output
project1
project1.c
project1.o
tests
==>mkdir dir1
==>morph file3 dir1
==>touch myfile
==>morph myfile dir2 //assuming dir2 doesn't exist
==>filez
Makefile
README.txt
batchfile
dir1
dir2
file2
file3
output
project1
project1.c
project1.o
tests
==>chdir dir1
==>filez
==>erase file3
==>chdir ..
==>erase file2
==>erase dir1
==>erase myfile
==>filez
Makefile
README.txt
batchfile
dir2
file3
output
project1
project1.c
project1.o
tests
==>esc
